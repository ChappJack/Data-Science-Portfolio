# -*- coding: utf-8 -*-
"""IntrotoPythonDay1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N73LpKLAzwBblx-wOJ55yd43KIdNuGXa
"""

greeting = 'Hello World'
print(greeting)

import numpy as np
str_input = input("What do you want?\n")
print(np.sqrt(int(str_input)))

print(1 + 1)
print(4 - 1)
print(2 * 39)
print(40 / 7)
print(40 // 7)
print(40 % 5)
print(2 ** 8)

my_val = 8.25

print(my_val)

print(my_val + 5)
print(my_val * 5)

my_val += 5
print(my_val)

my_new_val = abs(-5)
my_new_val

l = [2, 3, 'mango', ['papayas...', '...are awesome!'], True]

empty_list = []
empty_list2 = list()

empty_list
empty_list2

print(str(l[0]) + ', ' + str(l[1]))
print(l[3][0])
print(l[3][1])

# lists within lists are MATRICES.
B = [[1, 2], [0, 4]]
B[0][1] # retrieves B by calling the first row of the matrix and the second column
# STARTS AT 0 INSTEAD OF 1. OFF BY ONE ERRORS ARE THE MOST COMMON ERROR IN PYTHON

sl = [1, 2, 3, 4, 5, 6]
sl[1:4] # slices from place 1 to place 4 (but not including place 4)

sl[2:] # from place 2 to the end

sl[1::2] # from place 1 to the end BUT only every SECOND element

sl.index(5) # finds the index of the element NAMED 5
print(str(sl.index(5)) + ' <-- it\'s at place 4!')

repeat = [14, 15, 16, 16, 17]
repeat.index(16)

input = [1, 16, 16, 0, 9, 'lucky', 34, 3, 16]
repeat = []
i = 0
while i < len(input):
  if input[i] == 16:
    repeat.append(i)
  i += 1

print(repeat)

# loopless
input = [1, 16, 16, 0, 9, 'lucky', 34, 3, 16]
repeat = []
first = input.index(16)
second = input[first + 1:].index(16) + first + 1
third = input[second + 1:].index(16) + second + 1
repeat = [first, second, third]
print(repeat)

l = [1, 2, 3, 4] # automatic appending

l.append(5)
l

m = [1, 2, 3, 4] # manual appending
newList = m + [5] # 5 MUST be in a list (brackets)
newList

m * 3 # iterates list thrice

ones = [1] * 50
print(ones)

sl = ['apples', 'pears', 'oranges', 'cherries', 'grapefruits', 'pomegranates']
sl.append('kiwis')
sl.append('pineapples')
sl.append('grapes')
sl.append('tomatoes')
print(sl)

a = [1, 2, 3, 4]
b = ['a', 'b', 'c', 'd']
a + b

ln = [2, -5, 10, 7, 3, 5]
sorted(ln) # sorts in rising order

lm = ['apples', 'pears', 'oranges', 'cherries', 'grapefruits', 'pomegranates']
sorted(lm) # sorts in alphabetical order

lm.sort()
lm

test1 = [1, 3, 0, True, 10, 3.5, False]
test2 = [1, '2', 3, '4', 5, 'A']
print(sorted(test1))
print(sorted(test2))

my_list = [1, 2, 3]
a = my_list
my_list[1] = 5
print(my_list)
print(a) # VARIABLES DO NOT COPY STRINGS, JUST POINT TO THEM

my_str = 'abc'
my_str[1] = 'd' # strings are immutable

myList = [1, 2, 3]
myList2 = myList.append(4) # it appended in place, therefore set myList2 to none

print(myList2) # huh, None
print(myList)